seccion 01: rehaciendo la pagina inicial
objetivo: modificaremos la pagina inicial
1. cambiar el llamado del archivo css (<link rel="stylesheet" href="style-home.css">) por (<link rel="stylesheet" href="style-productos.css">).
2. llamar al css (<link rel="stylesheet" href="reset.css">).
3. al asignar eso la configuracion anterior se pierde.
4. copiar en la etiqueta (<header></header>) que tenemos en nuestro archivo (contacto.html), todo el contenido que tenemos en la etiqueta 
(<header></header>) del archivo (style-productos.css).
5. hacemos lo mismo con el pie de pagina (<footer></footer>), copiamos lo que tenemos en el archivo (style-productos.css) y lo pegamos en 
nuestro archivo (index.html) y debe quedar dentro del (<body></body>).
6. añadimos la etiqueta (<main></main>) que representa el centro, el contenido de nuestra pagina, creamos la etiqueta y le añadimos todo el 
contenido que ya tenemos en la pagina, dejando fuera (<img id="banner" src="banner/banner.jpg">).
7. recordamos que utilizamos la etiqueta (<div></div>) para dividir el contenido y para que sea mas facil darle mantenimiento o actualizacion,
pero utilizaremos la etiqueta (<section></section>) que lo que hace es separar el contenido por secciones y le dice a la pagina que ese contenido esta relacionado
entre si, y la cambiamos en las dos etiquetas (<div></div>).

seccion 01: adaptando el css
objetivo: configuracion de los estilos
1. comenzaremos con el banner, queremos que ocupe el (100%) del ancho de la pagina, para eso modificamos (<img id="banner" src="banner/banner.jpg">) y le cambiamos
el (id) por una clase (<img class="banner" src="banner/banner.jpg">), como buena practica utilizamos el (id) cuando queremos alterar comportamientos y usamos clases
cuando queremos modificar el estilo.
2. vamos al archivo css (style-productos.css) y le anadimos el selector de clase (.banner {}) y creamos la propiedad (width: 100%;) con esto modificamos el tamano 
de la imagen para que ocupe el (100%) de la pantalla.
3. trabajaremos en el bloque sobre la barberia alura, alteramos el nombre de la clase (<h2 class="titulo-centralizado">Sobre la Barbería Alura</h2>) y queraria como
(<h2 class="titulo-principal">Sobre la Barbería Alura</h2>), luego en css creamos el selector de clase (.titulo-principal {}) y le cambiamos el alineamiento con
la propiedad (text-align: center;) esto movera el titulo al centro y anadimos (font-size: 2em;) donde (2m) significa que el tamano sea 2 veces el tamano por defecto 
de la fuente que tiene el navegador, en este caso es de (15px) y al colocarle (2m) le decimos que queremos que sea 2 veces ese tamano que seria (30px).
4. anadimos un margen para que el titulo se separe de los parrafos, utilizamos en (.titulo-principal {}) la propiedad (margin: 0 0 1em;) que significa (0) arriba, 
(0) a la derecha y (1em) abajo que es 1 vez el tamano de fuente padron.
5. ahora demosle un espacio a los parrafos que estan super pegados, para eso en el archivo css (.principal p{}) le anadimos la propiedad (margin: 0 0 1em;) que 
significa (0) arriba, (0) a la derecha y (1em) abajo que es 1 vez el tamano de fuente padron.
6. darle el formato a la mision, para eso creamos (.principal strong {}) y le damos la propiedad (nt-weight: bold;) esto para hacela negrita y luego creamos 
(.principal em {}) y le damos la propiedad (font-style: italic;) que es la inclinacion del texto.
7. ahora trabajamos con los diferenciales, primero configuramos la etiqueta (<h3 class="titulo-centralizado">Difereciales</h3>) por la etiqueta 
(<h3 class="titulo-principal">Difereciales</h3>) y le modificamos el estilo de la imagen, para eso creamos (.imagenDiferenciales {}) en css y le damos la propiedad
(width: 60%;) para que la imagen tenga una anchura del (60%) del tamaño de la pantalla.

seccion 01: usando el float
objetivo: modificar el bloque que trata sobre la barberia alura (<section class="principal"></section>)
1. en la pagina ejemplo este texto contiene una imagen al lado izquierdo, para eso importamos la imagen despues de nuestro titulo principal 
(<h2 class="titulo-principal">Sobre la Barbería Alura</h2>) y colocamos (<img class="utensilios" src="imagenes/utensilios.jpg" alt="utencilios de un barbero.">).
2. ajustamos el tamaño de la imagen en el archivo css para eso creamos el selector (.utencilios {}) y le damos la propiedad (width: 120px;) donde le decimos que
nuestra imagen tenga un tamaño de (120px) esta la colocamos antes de la imagen de los diferenciales (.imagenDiferenciales {}) porqu el el html asi esta.
3. ahora vemos en el ejemplo que el texto bordea a la imagen, esto lo podriamos intentar alterando la propiedad display (display: inline;) que pondria el texto a 
la par de la imagen o podriamos utilizar la propidad (position: relative o relativa;) podriamos posicionar la imagen en cualquier lugar pero tampoco lograriamos
el efecto de borde.
4. para esto añadimos en (.utensilios {}) la propiedad (float: left;) donde (left) es el posicionamiento de una sombra al lado derecho de la imagen, que funciona 
como si la imagen se despegara de nuestra hoja y dejara una sombra y esta sombra es el espacio que no podra ocupar el texto.
5. los diferenciales tambien se movilizo hacia arriba, esto lo modificamos en (.titulo-principal {}) le añadimos la propiedad (clear: left;) que le dice cualquier
configuracion que venga despues del titulo de la izquierda que la limpie.
6. visualmente no altera nada pero le decimos a la pagina que esta imagen (imagenes/utensilios.jpg) solo aplica para este bloque (<section class="principal"></section>).
7. ahora colocaremos margenes en (.utensilios {}) añadimos la propiedad (margin: 20px;).
8. al guardar los cambios, la imagen se ve desalineada con relacion al texto, para corregir eso en (.utensilios {}) modificamos la propiedad (margin: 20px;) por
(margin: 0 20px 20px 0;) que le dice (0) arriba, (20px) derecha, (20px) inferior y (0) izquierda.

seccion 02: fuentes externas
objetivo: importar o trabajar con fuentes externas
1. identificamos que estamos utlizando 3 tipos de fuentes externas: 1. el tipo de letra (del menu de navegacion), 2. el mapa que es la ubicacion de la barberia, 
3. es el video.
2. existen fuentes privadas o publicas, las privadas son llamadas propietarias (microsof, apple) que utilizan esos tipos de fuente y los usan en sus sistemas 
operativos, sistemas, aplicaciones, software, el otro tipo de fuente es las publicas que todos podemos utilizar de forma gratuita, unicamente debe importarse y hacer 
la referencia de forma correcta.
3. en (fonts.google.com) de google nos ofrece diferentes tipos de letra.
4. si escogemos el tipo de letra (montserrat), para usarla debemos buscar la seccion donde nos da los links para incrustar en nuestro html y en nuestro css
5. copiar el link y pegarlo, en html lo pegamos al final de la etiqueta (<head></head>).
6. ahora debemos usarlo y para eso indicamos en que elemento o etiqueta vamos a utilizar ese elemento y lo haremos en nuestro documento css para eso creamos
(body{}) al inicio del documento css y con esto lo aplicaremos a todas la paginas que tenemos (<body></body>) y le anadimos la propiedad (font-family: "Montserrat", sans-serif;)
7. esto nos permitira una ventaja de padronizar independientemente del sistema operativo, o navegador la pagina mantendra la misma vistosidad que le hemos asignado.

seccion 02: trabajando con mapas
objetivo: la incrustacion del mapa
1. primero debemos crear la estructura en (index.html) en la etiqueta (<main>) antes de la etiqueta (<section class="diferenciales">) creamos una etiqueta (<section></section>)
a esta le añadimos una clase (<section class="mapa">) y dento de esta (<section>) creamos un titulo (<h3></h3>) y le asignamos la 
clase que ya tenemos de (class="titulo-principal") y quedaria como (<h3 class="titulo-principal">Nuestra Ubicacion</h3>) y le añadimos una etiqueta de parrafo como
descripcion (<p></p>).
2. ahora importamos el mapa por medio del servicio gratuito de google, vamos a google maps, una vez alli nos ubicamos en la direccion que necesitamos mostrar y al encontrarla
buscamos la opcion (compartir o incorporar mapa) luego hacemos click en (incorporar mapa) una vez alli podemos modificar el tamaño, una vez acordado el tamaño hacemos click en 
(copiar html) y nos dirigimos al codigo y lo copiamos.
3. ahora explicaremos el codigo que se muestra en nuestro html, (<iframe>) es una etiqueta que se utiliza para crear tipos de ventanas, espacios o areas donde podemos colocar
cualquier tipo de imagen, mapa, gifs o videos, el (src) es donde colocamos la direccion web de nuestra barberia, (width) el ancho, (heigth) la altura, etc...
4. vamos a ajustar el tamaño cambiando el (width="600") a (width="100%") y la altura de (height="450") a (height="300").
5. ahora vamos a agregar un margen interno, creamos en css nuestro selector de clase (.mapa {}) antes de (.imagenDiferenciales {}) para guardar el orden de creacion y le 
añadimos la etiqueta (padding: 3em 0;) donde (3em) significa 3 veces el tamaño de la fuente que viene por defecto.
6. ahora configuraremos el parrafo superior del mapa, creamos en css el selector (.mapa p{}) y le asignamos la propiedad (margin: 0 0 2em;) que le dice (0) en la parte superior,
(0) en la derecha y (2em) en la parte inferior, tambien le añadimos la propiedad (text-align: center;) que es pocisionar el texto en el centro.

seccion 02: importando un video
objetivo: vamos a incrustar un video en la pagina
1. ubicamos el video, buscamos la opcion (compartir), seleccionamos (insertar), seleccionamos (copiar) y copiamos ese codigo despues de la etiqueta (<section class="diferenciales"></section>)
2. ahora le daremos la configuracion de estilos en el archivo css, creamos (<div></div>) le creamos una clase (<div class="video">) y colocamos el (<iframe>) dentro de esa etiqueta
3. ahora en css creamos (.video {}) y le añadimos la propiedad (width: 560px;) que es el mismo tamaño que tiene nuestro video en (<iframe>) y le asignamos la etiqueta (margin: 1em auto;)
que le dice (1em) una vez el tamaño padron y (auto) a los laterales.

seccion 03: ajustando los diferenciales
objetivo: ajustar el tamaño de la imagen y darle formato a los diferenciales
1. en (index.html) colocaremos la lista y la imagen dentro de una (<div></div>) recordando que esta etiqueta nos ayuda a separar para poder crear clases, creamos la clase 
(<div class="contenido-diferenciales">), ahora a (<ul></ul>) le colocamos una clase (<ul class="lista-diferenciales">), ahora modificaremos la clase de nuestra imagen de (<img 
src="diferenciales/diferenciales.jpg" class="imagenDiferenciales">) a (<img src="diferenciales/diferenciales.jpg" class="imagen-diferenciales">)
2. ahora debemos ir al archivo css y modificar el selector de imagen de (.imagenDiferenciales {}) a (.imagen-diferenciales {}).
3. ahora en (<div class="contenido-diferenciales">) vamos a ajustar el ancho en el documento css creando (.contenido-diferenciales {}) y asignandole la propiedad
(width: 640px;) y la propiedad (margin: 0 auto;) donde el (0) es para arriba y abajo y (auto) a los laterales.
4. colocamos (.contenido-diferenciales {}) despues del mapa porque asi se encuentra en el archivo html.
5. ahora creamos en css (.lista-diferenciales {}) y ajustamos su anchura con (width: 40%;) ya que la imagen tiene (60%) que la lista ocupe los otros (40%) que hacen falta
de los (640px) que estamos definiendo para todo ese bloque.
6. ahora alinearemos la lista y la imagen sobre la horizontal, para eso en (.lista-diferenciales {}) añadimos (display: inline-block;), pero el ajuste aun no es visible esto
pasa porque en (index.html) tenemos un espacio entre (</ul>) y (<img src="diferenciales/diferenciales.jpg" class="imagen-diferenciales">) y html lo toma como partes separadas
para eso hay que unirlas, hasta con ponerlas en la misma linea (</ul><img src="diferenciales/diferenciales.jpg" class="imagen-diferenciales">).
7. ahora la lista la pondremos en la parte vertical superior junto con el borde superior de la imagen en (.lista-diferenciales {}) y añadimos (vertical-align: top;).
8. ahora el texto esta muy pegado y nos faltan 2 items, ya que la lista tiene (class="items") aprovechamos esta para crear un selector de clase (.items {}) y a esta le damos la
propiedad (line-height: 1.5;) donde el (1.5) le dice aumentame el tamaño de las letras en esa cantidad, 
,luego en el html en la lista añadimos (<li class="items">Puntualidad.</li>) y (li class="items">Limpieza.</li>).

seccion 03: pseudo classes
objetivo: colocar negrito al primer item de la lista de diferenciales
1. para esto utilizamos las pseudo-clases, creamos debajo de (.items {}) el selector (.items:first-child {}) donde le decimos al primer elemento o hijo de ese boque de elementos
que en este caso es la (class="items") pintamelo de negrita con la propiedad (font-weight: bold;) y queremos pintar el ultimo utilizamos (.items:last-child {}), tambien tenemos
(.items:nth-child (3){}) donde le podemos indicar el numero del item queremos que se pinte de negrito o aplicarle el efecto seleccionado, si le ponemos (2n) se pintaran los items
pares o si colocamos (3m) pintara los impares.

seccion 03: aplicando gradientes
objetivo: aplicar la trancision de colores (degradado que pasa de blanco a oscuro)
1. para eso trabajaremos por bloques (<section class="principal">), (<section class="mapa">) y (<section class="diferenciales">), para trabajar con el primero vamos a css y creamos
(.principal {}) que nos sirve para alterar el bloque completo y le asignamos la propiedad (background: #FEFEFE;) que es un color parecido al que necesitamos, luego creamos la propiedad
(padding: 3em 0;) que le da un espaciamiento de (3em) arriba y abajo y (0) laterales.
2. ahora trabajaremos en el siguient bloque (<section class="mapa">) para darle ese color plomo, para eso debajo de (.utensilios {}) creamos el selector de clase (.mapa {}) y le 
asignamos la propiedad ()
3. luego para el tercer bloque debajo de (.mapa p{}) creamos (.diferenciales {}) y le asignamos la propiedad (padding: 3em 0;) para darle espaciamiento a lo vertical y laterales y la 
propiedad (background: #888888;) que da el color plomo, pero tenemos un error que tenemos un centralizado en el (<main>) que obliga a que ese centralizado sea en todos nuestros bloques
para eso buscamos (main {}) que tiene las propiedades (width: 940px; margin: 0 auto;) las sacamos y lo colocamos en nuestro bloque principal (.principal {}) y vemos que el bloque de los 
diferenciales tiene el aspecto correcto porque el (background: #FEFEFE;) se esta aplicando al 100% de la pagina y nuestro contenido esta centralizado. 
4. nuestro mapa se desconfiguro y para esto encapsulamos el mapa en (index.html) para configurar exclusivamente el mapa, para eso en html creamos (<div></div>) y le asignamos la clase 
(class="mapa-contenido") y usamos esta clase en css creamos despues el selector (.mapa-contenido {}) y configuramos el tamano con (width: 940px;) y modificamos los margenes con (margin: 0 auto;).
5. si queremos aplicar el (background: orange;) en todo nuestro bloque de mapa debemos hacerlo en (.mapa{}) y ocupara todo el espacio de pantalla.
6. para hacer pruebas de transcision de colores en (.mapa{}) creamos (background: orange;) luego le anadimos (background: linear-gradient(orange, blue);) donde le decimos que pase del 
naranja al azul, podemos colocar mas colores para hacer una transicion mayor (background: linear-gradient(orange, blue, red, black);), pero vemos que por defecto el color es aplicado en la 
horizontal y para modificar eso podemos utilizar (background: linear-gradient( 45 deg, orange, blue, red, black);) que le dice degrada los colores en un angulo de 45 grados.
7. podemos decirle que el primer color ocupe cierto porcentaje de toda el area disponible con ( background: linear-gradient( 45deg, orange 50%, blue, red, black);) donde le decimos que el naranja
ocupe el 50% de ese espacio, css automaticamente divide todos los demas colores en el otro 50% disponible.
8. existe la opcion de usar (background: radial-gradient(orange 50%, blue, red, black);) y estos colores tendran un efecto eliptico.
9. ahora modificaremos esto para que quede con la configuracion que necesitamos (background: linear-gradient(#fefefe, #888888);) donde le decimos que se degrade de ese casi blanco hasta el color
plomo.

seccion 03: pseudo-elementos
objetivo: como aplicar pseudo elementos
1. los pseudo elementos nos permiten seleccionar elementos especificos y poder configurarlos.
2. introducir el video dentro del bloque de los diferenciales para eso cortamos todo el bloque (<div class="video">) y lo pegamos dentro del bloque (<section class="diferenciales">)
3. debajo de (.titulo-principal {}) creamos (.titulo-principal::first-letter {}) y le anadimos la propiedad (font-weight: bold;).
4. podemos tambien alterar lineas con (p:first-line {}) y anadimos la propiedad (font-style: italic;).
5. podemos tambien modificar entre contenido si utilizamos (.titulo-principal:before {content: "["}) que indica donde comienza y (.titulo-principal:after {content: "]"}) que indica donde termina, 
sin embargo vemos que la propiedad que se coloco con anterioridad ((p:first-line {font-style: italic;})) no se aplica, esto se debe a que css hace un barrido secuencial y si colocamos este cambio
entre ambos corchetes, el primer corchete se cambia a negrita.
6. si vemos el ejemplo modelo tenemos una estrellita al inicio de cada item para eso vamos a la pagina (unicode star) y buscamos un codigo de un item y lo copiamos (U+2605), en css creamos
despues (.items {}) a (.items:before {}) y le anadimos la propiedad (.items:before {content: "\2605"}).

seccion 04: selectores avanzados
objetivo: selectores avanzados para capturar elementos y modificar el estilo
1. creamos al inicio de (<main>) un parrafo ejemplo (<p>parrafo ejemplo</p>) para modificarlo, ahora en el archivo css creamos (main p {}) le daremos un color rojo (background: red), asi css 
convierte todas las etiquetas (<p></p>) en rojo, esto pasa css porque no distingue entre etiquetas hijas, nietas, bisnietas, pero para corregir esto se utiliza (main > p {}) que le dice a 
css que solo actue sobre las etiquetas hijas.
2. ahora si queremos ejecutar un estilo al primer parrafo que contiene la informacion de la barberia, si observamos el (index.html) esta etiqueta es una etiqueta nieta y para modificarla utilizamos 
(img + p {}) que le dice seleccioname la etiqueta (<p></p>) que esta despues de una imagen y a esa seleccion aplicales un (background: yellow;).
3. ahora si queremos aplicarle a todos los parrafos despues de la imagen para eso utilizamos (img ~ p {}) que le dice, aplicale a todos los parrafos que vienen despues de la imagen.
4. otra alternativa si queremos hacer eso a un parrafo entre otros parrafos, para eso creamos (.principal p:not(#mision){}) que le dice aplica la propiedad a todos los parrafos menos al que tiene el 
identificador (<p id="mision">).

seccion 04: calculo con css
objetivo: hacer calculos con css
1. primero limpiamos los colores modificados anteriormente en el archivo css y tambien el parrafo que creamos en html.
2. para explicar el calculo seleccionamos la imagen de los diferenciales y la inspeccionamos, en la seccion de composicion de la imagen que nos muestra las dimensiones de todos sus elementos
nos dirigimos al (width: 120px) y lo cambiamos a (calc(40% - (26px))) lo que le esta haciendo es calcula el tamano de la pagina, esto es util cuando el usuario abre la pagina desde un computador,
un dispositivo movil, una tablet esto se utiliza para que la imagen no quede distorcionada en la pantalla del dispositivo del usuario y lo que le dice es, usa el (40%) de la pantalla sin importar de
que dimension sea y a eso restale (26px) en este monitor ese tamano queda en (350x350), incluso podemos colocar (width: calc(40% - (26px * 4);) que le pide que reste mas y con esta modificacion la
imagen ocuparia (272x272) pixeles.
3. esto permitira que nuestos elementos se ajusten mejor a diferentes dispositivos.

seccion 05: opacidad en los elementos
objetivo: aprender a trabajar con opacidad y con sombras
1. opacidad es la capacidad que tienen los elementos de no dejar pasar la luz.
2. en el archivo css en (.imagen-diferenciales {}) creamos la propiedad (opacity: 0%;) que le dice que pace (0) luz, esto hace que la imagen desaparezca, si ahora le asignamos (opacity: 0.3;) o (30%)
ahora la imagen se mira casi transparente.
3. pero si queremos que el comportamiento se active cuando el mouse pase por encima creamos (.imagen-diferenciales:hover {}) y le asignamos la propiedad (opacity: 0.3;), y para que se mira mucho mejor
le daremos una transicion con (transition: 400ms;) esto permitira una transicion mas amigable (menos brusca).
4. ahora probaremos como ejemplo a los titulos principales en (.titulo-principal {}) le asignamos (color: rgba(0,0,0,0.3)) donde (rgba) permite agregar un cuarto elemento que es la opacidad (0.3),
podemos jugar con este elemento para aplicar opacidad y lo podemos utilizar en cualquier elemento.
5. borramos la prueba que hicimos anteriormente hasta donde modificamos la opacidad de la imagen.

seccion 05: sombra en los elementos
objetivo: colocarle sombra a la imagen de diferenciales
1. para eso utilizamos en css (.imagen-diferenciales {}) la propiedad (box-shadow: 10px 10px #000000;) donde el primer (10px) es la ubicacion de la sombra en el eje horizontal, el segundo (10px) es la 
ubicacion de la sombra en el eje vertical y (#000000) es el color de la sombra.
2. si incluimos un cuarto parametro (box-shadow: 10px 10px 30px #000000;) donde (30px) es el degradado o difumacion del elemento, y es en que proporcion va de un color solido a un color mas transparente.
3. si incluimos un quinto parametro (box-shadow: 10px 10px 30px 15px #000000;) donde (15px) es la expancion, hasta donde queremos que esa sombra llegue.
4. si queremos ponerle mas sombra a nuestro elemento ( box-shadow: 10px 10px 30px 15px #000000, -10px -10px yellow ;) donde el primer (-10px) coloca la sombra a la izquierda, el segundo (-10px) la coloca
arriba y (yellow) le da el color amarillo.
5. podemos colocar (box-shadow: 10px 10px 30px 15px #000000, -10px -10px yellow, -15px 10px rgba(50,50,50,0.5);) esto crea una opaciddad y sombra mas abajo.
6. podemos colocar opacidad interna, en (.diferenciales {}) creamos la propiedad (box-shadow: inset 0 0 30px red;) esto crea en todo el boque diferenciales un recuadro rojo difuminado, con una sombra
interna.
7. ahora eliminamos lo hecho hasta el inciso 3.
8. tambien podemos aplicar sombras a nuestros textos, en (.titulo-principal {}) creamos (text-shadow: 2px 2px red;) donde (2px) aplica al eje horizontal, (2px) en el eje vertical y (red) el color.
9. podemos darle otro parametro (text-shadow: 2px 2px 10px red;) donde (10px) es el spread que es la espancion de la sombra.
10. eliminamos hasta el inciso 8.
11. pagina para entrenar en pagina (box shadow css generator mozilla) podemos practicar.

seccion 06: meta tag viewport
objetivo: hacer la pagina repunsiva (al ser abierta desde cualquier dispositivo consiga adaptarse al tamaño de forma adecuada)
1. nos dirigimos a la herramientas para el desarrollador, una vez alli seleccionamos el icono donde sale un dispositivo movil y tablet, seleccionamos al (iPhone XR) para ver el comportamiento de la pagina
vemos que este tiene una resolucion de (414x896) pero vemos que el menu queda muy pequeño y para corregir este tipo de cosas vamos a adicionar un elemento en nuestro html en la etiqueta (<head></head>) 
adicionamos (<meta name="viewport" content="width=device-width">) con esto le decimos al navegador que use y adapte nuestra pagina para dispositivos moviles tambien, sin embargo vemos que la pagina se 
desconfiguro esto porque toda la pagina esta actualizada solo para monitores de (940px - 1200px), para ajustar eso nos dirigimos a css y creamos al final (@media screen and (max-width:480px) {}) y le 
damos la propiedad (body {background: red;}), donde (@media) es a mediasqueri nos permiten trabajar con exepciones (dada un condicion aplicar algo diferente), (screen) porque vamos a trabajar con el monitor,
(max-width:480px) es el ancho maximo que le dice si encuentras una pantalla con hasta (480px) aplicame (body {background: red;}), esto pasa porque estamos seleccionando el (iPhone XR) que tiene (414px) de
ancho, se seleccionamos una tablet el color rojo se quita.

seccion 06: adaptar una pagina para celular
objetivo: ajustar de forma especifica los elementos que nesecitan ser ajustados para que la pagina sea responsibo
1. abrimos la consola del desarrollador y en nuestro css eliminamos (body {background: red;}).
2. inspeccionamos cada elemento que se altero, en el elemento (<header>) vemos que (<div class="caja">) tiene un tamaño absoluto de (width: 940px;) si cambiamos ese valor por (width: auto;) el panel de 
navegacion se deconfigura y se corre hasta el lado izquierdo, lo que necesitamos es que nuestra caja tenga un ancho automatico en la situacion que abran la pagiga con un dispositivo movil, otros elementos
que tienen ese comportamiento son (<section class="principal">) vemos que tambien esta con (width: 940px;) y le cambiamos a (width: auto;) y vemos el ajuste.
3. ahora ejecutamos esos cambios en nuestro archivo css, en (dia screen and (max-width:480px) {}) creamos la propiedad (.caja, .principal {width: auto;}) y asi temenos el ajuste de la caja y del bloque
principal.
4. si continuamos analizando vemos que el mapa (<div class="mapa-contenido">) tiene esta ocupando (width: 940px;) y por eso ocupa un tamaño mas grande del que nos permite el celular, si agregamos 
(.caja, .principal, .mapa-contenido {}) vemos que se ajusta.
5. ahora vemos el bloque de los diferenciales tambien esta exediendo los pixeles disponibles del celular, para esto vamos a (<div class="contenido-diferenciales">) tiene una medida de (width: 640px) y
si le ponemos auto observamos que reduce y adopta el tamaño correcto para el dispositivo movil.
6. por ultimos tenemos el video (<div class="video">) que tiene (width: 560px) y lo añadimos a (.caja, .principal, .mapa-contenido, .contenido-diferenciales, .video{}) pero vemos que el video no se 
actualizo esto se debe que tambien en el html debemos modificarlo (iframe width="560" height="315" ) a (iframe width="100%" height="315" ).
7. con eso la pagina ya queda responsiba.
8. ahora queremso centralizar nuestro logo, vamos en html (<h1> <img src="imagenes/logo.png" alt="logo de la barberia Alura"></h1>) y vemos que en css no tiene ninguna configuracion, para eso vamos
a (@media screen and (max-width:480px) {}) y creamos (h1 {}) y le asignamos (text-align: center;). 
9. ahora vamos a ajustar nuestro panel de navegacion que tiene una posicion absoluta, en (@media screen and (max-width:480px) {}) creamos (nav {}) y le damos la propiedad (position: static;). 
10. vamos a configurar los diferenciales para que la lista y la imagen ocupen el (100%), para eso en (@media screen and (max-width:480px) {}) creamos (.lista-diferenciales, .imagen-diferenciales {}), 
puesto que la lista la configuramos con (width: 40%;) y la imagen con (width: 60%;) y le asignamos la propiedad (width: 100%;) para los dos, visita la pagina (notion) para la gestion de tus proyectos.



 



 

 
 
 
 
 















 



 
























 



 







