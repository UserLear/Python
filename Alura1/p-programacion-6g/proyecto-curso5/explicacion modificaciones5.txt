seccion 01: comenzando la pagina de contacto
objetivo: definir formulacios
1. hacemos una copia del documento (productos.html) del (<head>), (<body>), (<header>), (<main>), (<footer>).
2. cambiamos el texto del titulo a (<title>Contacto - Barberia Alura</title>).
3. renombrar los archivos de estilo como buenas practicas, cambiar el archivo (style.css) a (style-home.css) y el archivo 
(productos.css) a (style-productos.css).
4. cambiar las referencias que hacemos en la etiqueta (<head>) de cada archivo html.

seccion 02: campos basicos
objetivo: construir los primeros items del formulario (area de nombre y apellido, correo, telefono)
1. dentro de la etiqueta (<main>) utilizaremos la etiqueta especial (<form></form>) que se utiliza para crear formularios 
que hacer referencia a un formulario dentro creamos la etiqueta (<input type="text">) que crea una cajita de texto para que
el usuario introduzca sus datos. 
2. colocar a que se refiere la caja de texto, una etiqueta a esa etiqueta (<label>Nombre y Apellido</label>) que dice de
que se trata y por defecto se ubica a la izquierda de la caja.
3. al colocal un input de tipo texto siempre debemos poner un (<label>) para asociar a que se refiere ese (<input>) y para
relacionarlos aun mas podemos colocar en la etiqueta (<input>) un identificador (<input type="text" id="nombreapellido">)
y en el (<label>) un (for) que contiene el identificador del (<label for="nombreapellido">Nombre y Apellido</label>), esto
le dice referite al (<input>) nombre y apellido.
4. al hacer click en la etiqueta nombre y apellido se activa la caja de texto para que el usuario ingrese el texto o se 
puede hacer click en la caja de texto.
5. creamos los (<input>) para los demas datos que se le pediran al usuario (<input type="text" id="correoelectronico">) y
creamos su etiqueta de referencia (<label for="correoelectronico">Correo electronico</label>) etc...
6. crear el boton de enviar o guardar los datos del formulario con la etiqueta (<input type="submit">) en este caso html le
creara ese boton, el boton se crea con la palabra (enviar) porque el navegador reconoce el idioma porque esta configurado
en espanol.
7. le podemos asignar un nombre a ese boton con (<input type="submit" value="Enviar Formulario">).

seccion 02: estilos para formulario
objetivo: darle estilo a los elementos creados en html
1. vamos a reutilizar el archivo css (style-productos.css).
2. primero centralizar los elementos utilizando (width: 940px;) esto a razon que una pantalla padron tiene (1270px) y
como buena practica se utilize (940px) para centrar, y (margin: 0 auto;) es 0 para arriba y para abajo y automatico a los
costados.
3. el boton hizo un saldo de linea porque no entro en la definicion de los (940px).
4. colocar en formato vertical los elementos utilizando (form label{}) utilizaremos la propiedad (display: block;), y
creamos otro (form input {}) con la misma propiedad (display: block;).
5. colocar un espacio entre los (<input>), creamos (form {}) y le anadiremos la propiedad (margin: 40px 0;), donde (40px)
es para arriba y para abajo, y (0) a los costados.
6. ahora debemos mejorar el visual de los (<label>) y de los (<input>), en css en (form label{}) anadimos (font-size: 20px;)
que significa un tamano de (20px) y (margin: 0 0 10px;) que significa, coloca (0) para arriba, (0) a la derecha, (10px) a la
derecha, anadimos a (form input {}) la propiedad (margin: 0 0 20px;).
7. ahora debemos aumentar el tamaño de los (<input>) por si el nombre o apellidos son muy grandes, vamos a inspeccionar y
revisamos el tamaño del elemento que en este caso es (169x15) lo siguiente es el padding con (1 arriba y abajo, 2 a los lados)
que es el esparciamiento interno, lo siguiente es el borde (border con 2 cada lado) y luego el margen (margin sin medida), 
8. el que queremos modificar es el (padding) y le damos los valores (padding: 10px 25px;).
9. ahora definiremos el ancho de los (<input>) para que ocupen el (50%) del total de la pantalla de (940px), para eso añadimos
la propiedad (width: 50%;).

seccion 03: formulario mas completo
objetivo: crear una caja de texto con su tamaño manipulabre, y crear las seccion de seleccion
1. utilizamos la etiqueta (<textarea></textarea>) que es especial para introducir texto.
2. definir el tamaño de la etiqueta (<textarea>) para que casi se iguale al area de los (<input>) anteriores, para eso utilizamos
en la etiqueta de inicio (<textarea cols="70", rows="10" id="mensaje"></textarea>) donde (cols="70") significa añade 70 columnas y 
(rows="10") de dice añade 10 filas, añadimos el (id="mensaje") para crear la etiqueta (<label>) asociada a ese (<input>).
3. añadir el (<input>) seleccion, para esto creamos la etiqueta (<input type="radio">) que nos permite ese comportamiento
4. a este le damos el (<label>) y como primero crearemos la seleccion de email ponemos (<label for="radio-email">Email</label>)
luego a (<input type="radio">) le añadimos (value="email") que define que tipo de valor tendra y añadimos el identificador 
(id="radio-email") para enlazar al (<label>).
5. de la misma forma creamos la seleccion para el telefono y el whatapp.
6. ahora modificar la seleccion para que sea una sola vez, para eso añadimos a (<input>) la propiedad (name="contacto"), añadir esa
propiedad en los 3 (<input>) le dice al html que no los considere por separado sino como uno solo.
7. añadir el titulo a esta seleccion con (<p>¿Como le gustaria que lo contactemos?</p>).
8. separaremos el contenido desde la etiqueta (<p>) hasta el (<input type="radio" name="contacto" value="whatapp" id="radio-whatapp">) 
esto para organizar utilizamos la etiqueta (<div></div>).
9. creamos el (<label><input type="checkbox">Le gustaria recibir novedades de la barberia Alura</label>) que habilitara una cajita de
seleccion para la pregunta de recibir notificaciones.

seccion 03: css para inputs mas complejos
objetivo: trabajar con los estilos de los inputs mas complejos
1. añadimos al selector (form input{}), (form textarea{}) y lo separamos con una coma (form input, form textarea {}) esto para replicar 
el uso de propiedades sobre otros elementos, con eso ajustamos el area de escritura con las mismas propiedades de los inputs anteriores.
2. ahora modificaremos la posicion de los nombres de botones con su respectiva casilla de seleccion en html, lo que queremos es que la 
casilla se coloque antes del nombre, para eso modificaremos la posicion (<label for="radio-email" >Email</label>) y ahora añadiremos 
(<label for="radio-email" ><input type="radio" name="contacto" value="email" id="radio-email">Email</label> y haremos esto con las demas
etiquetas.
3. ahora vemos que la casilla de seleccion queda en una sola linea, esto se debe a que tenemos modificados los inputs con la propiedad 
(display: block;) que significa que ocupa el (100%) de la pagina, para resolver esto creamos una clase para los inputs padrones que 
creamos iniciales (class="input-padron") de esa forma creamos una caracteristica solo para esos inputs y en el archivo css modificamos
(form input, form textarea {}) por (.input-padron{}).
4. ahora modificaremos la etiqueta de pregunta y dentro de (form label {}) le añadimos (form label, form p {}).
5. ahora separaremos los espacio entre los (checkbox), (submit) y los input (radio), para eso creamos una clase (class="checkbox") y 
creamos el selector de clase en el archivo css (checkbox {}) y le añadimos las propiedades (margin: 20px 0;) que significa añade (20px)
para la vertical y horizontal y (0) para los costados.

seccion 03: jerarquia en el css
objetivo: entender el comportamiento de css en relacion a los diferentes marcadores que utilizamos
1. un item puede ser llamado por un identificador (id), selector de clase (.nombre) y por su etiqueta (p), entonces css va hacer caso 
primero.
2. para ejemplo utilizaremos la etiqueta (<p>) de la pregunta.
3. le creamos una clase (clase="test") y un identificador (id="test").
4. luego en css creamos el selector (p {}) y le cambiamos el color (color: red;), luego creamos un selector (form p{}) y le añadimos
(color: blue;) y observamos cual color prevalece, en este caso se convierte en azul sea que este arriba o abajo, esto pasa porque existe
una jerarquia en que css se comporta en relacion a los distintos marcadores que se pueden utilizar.
5. el (id) es primero, el segundo (class) y tercero la (<p>), lo que hace css es sumar el numero de etiquetas que estan juntas por ejemlo
le damos un valor de peso a cada una (id = 100), (class = 10) y (<p> = 1) y si tememos la etiqueta (form p) y la etiqueta (p) tenemos que 
(form p = 2) por estar compuesto de (form) y (p) mientras (p = 1) por ser solo (p), si probamos ahora con el selector de clase 
(.test {color: yellow}) el color cambia a amarillo, porque el selector de clase pesa (10) y si usamos (p.test {color: orange}) el color 
cambia a naranga esto porque (p.test = 1 + 10), ahora si usamos el identificador (#test {color: pink}) esto se cambia a rosado puesto 
que (id) pesa (100) sin importar la posicion.
6. existe una configuracion que es mucho mas fuerte que las anteriores y es la configuracion en la misma linea por ejemplo (<p clase="test" 
id="test" style="color: purple">¿Como le gustaria que lo contactemos?</p>) esto hara que cambie a color purpura.

seccion 03: seleccionando opciones de lista
objetivo: eliminar anteriormente hechas + añadir el input lista de horario
1. creamos la etiqueta (<select>) que es especial para hacer una lista de opciones, y cada opcion la encerramos en la etiqueta (<option>Mañana</option>)
y creamos una etiqueta (<opcion>) por cada opcion y todo esto lo encerramos en la etiqueta (<div></div>).


seccion 04: inputs para celulares
objetivo: pensar un poco en la experiencia del usuario
1. añadir configuraciones padron para que al entrar desde un celular la pagina tenga buena presentacion.
2. en la pagina (mobileinputtypes.com) para ver los diferentes tipos de inputs.
3. corregimos los inputs del html con su respectiva opcion al tipo de dato que necesitamos se introduzca, en la etiqueta (<input type="text" 
id="correoelectronico" class="input-padron">) cambiamos a (<input type="email" id="correoelectronico" class="input-padron">) y vamos cambiando los demas
inputs respectivamente a (type="tel").

seccion 04: datos importantes en los inputs
objetivo: definir algunos campos como obligatorios
1. en (<input type="text" id="nombreapellido" class="input-padron">) definir (required), ((<input type="text" id="nombreapellido" class="input-padron" required>)).
2. ahora daremos una guia a cada input que le dira al usuario que tipo de dato necesitamos añadimos (placeholder="mensaje") ya añadido en la etiqueta se veria
(<input type="email" id="correoelectronico" class="input-padron" required placeholder="emal@domimio.com">) etc...
3. definir un valor por defecto en la lista de opciones utilizando (<label for="radio-whatapp"><input type="radio" name="contacto" value="whatapp" id="radio-whatapp" 
checked>Whatapp</label>).

seccion 04: mejorando la semantica del formulario
objetivo: mejorar la estructura del codigo en html
1. por conveniencia utilizamos la etiqueta (<div>) para separar el contenido, pero existe otra etiqueta especifica que se llama (<fieldset></fieldset>) que agrupa
etiquetas que pertenecen al mismo grupo, que en el primer caso seria las etiquetas de contacto y en el segundo caso serian las etiquetas de lista de opciones, esto 
le dice al navegador todo lo que te estoy pasando esta relacionado.
2. esta etiqueta (<fieldset>) no utiliza la etiqueta (<p>) para el titulo sino que utiliza la etiqueta (<legend></legend>) pero al guardar el estilo de mi texto se
modifica, esto a razon que utilizabamos la etiqueta (<p>) para esta modificacion, para resolverlo debemos incluir la etiqueta (<legend>) en el selector donde se 
encontraba la etiqueta (<p>) que seria (form label, form p {}) por (form label, form legend {}).
3. ahora en html en las imagenes le anadimos la propiedad (alt="descripcion") donde indicamos de que se trata esa imagen, tenemos (<h1> <img src="imagenes/logo.png"></h1>)
y le anadimos (<h1> <img src="imagenes/logo.png" alt="logo de la barberia Alura"></h1>) esto lo hacemos para crear una descripcion por si la imagen no carga en la pagina
el usuario sepa de que trata, esto lo repetimos en las demas imagenes.

seccion 05: que son las transiciones
objetivo: mejorar el boton de enviar formulario (sumit) 
1. en html, en la etiqueta  creamos una clase (<input type="submit" value="Enviar Formulario">) le agregamos una clase (<input type="submit" value="Enviar Formulario" class="enviar">),
luego en nuestro archivo css creamos el selector de clase (.enviar {}) y le anadimos la propiedad (width: 40%;) primero para definir el tamano, esto es el (40%) del area disponible que
tenemos, luego (padding: 15px 0;) que es el espaciamiento interno para que el boton tenga un formato mas grande donde (15px) es el espacio de arriba y abajo y (0) el el valor para los
laterales, luego (font-size: 18px;) para aumentar el tamano de la letra, (font-weight: bold;) para convertir en negrita, (color: white;) para cambiar el color de la letra,
(background: orange;) para cambiar el color de la caja.
2. ahora quitaremos el borde con (border: none) que significa que no queremos ningun borde y luego haremos puntas redondeadas con (border-radius: 5px;).
3. ahora le daremos que destaque el boton cuando nuestro mouse se posicione sobre el, en css creamos (.enviar:hover {}) y le asignamos la propiedad (background: red;).
4. ahora anadiremos la propiedad (transition: 1s background;) donde (1s) es el tiempo que tardara y (background;) es donde se ejecutara ese cambio de color, todo esto lo anadimos en 
(.enviar {}).
5. ahora modificaremos el cursor con la propiedad (cursor: pointer;) que cambia el icono del mouse al posicionarse sobre el boton a un manito, esto lo anadimos a (.enviar {}).

seccion 05: entendiendo transformaciones
objetivo: darle un destaque de aumento de tamaño al boton de enviar formulario
1. en el selector de clase (enviar:hover {}) del documento css añadimos (transform: scale(1.20);) que le dice aumentame (1.2) cuando el mouse se posicione sobre el elemento.
2. ahora vamos a cambiar el tiempo de transicion de ese cambio de tamaño hay que modificar la propiedad (transition: 1s background;) porque este solo aplicaba al color y 
cambiarlo por (transition: 1s all;) que le dice que aplique la transicion para todas las caracteristicas. 
3. ahora probaremos la rotacion del boton y añadimos en (.enviar:hover {}) la propiedad (transform: rotate(70deg)) pero al ejecutarlo la propiedad (transform: scale(1.20);)
se omite, esto pasa porque css toma en cuenta la ultima propiedad asignada y olvida las anteriores, para corregir esto basta con colocar la propidedad (rotate(70deg)) en la 
misma linea de (transform: scale(1.20);) y quedaria (transform: scale(1.20) rotate(70deg);).
4. eliminamos la rotacion añadida en la opcion anterior.

seccion 06: tabla basica
objetivo: construir la tabla de horarios de funcionamiento de la barberia
1. en el documento html despues de la etiqueta (</form>) pero antes de (</main>) creamos la etiqueta (<table></table>) y dentro de esta etiqueta definimos la etiqueta 
(<tr></tr>) que nos ayudan a definir las lineas de la tabla y dentro de esta definimos (<td></td>) que son las celdas de la tabla, definimos 2 (<td>) porque tenemos 2
columnas, dentro de la primer (<td>) colocamos el encabezado (<td>Dia</td>) y dentro de la otra colocamos (<td>Horario</td>), asi creamos los demas (<tr>) para las demas
casillas que representarian los dias y horarios (<tr><td>Lunes</td><td>08h - 20h</td></tr>) etc...

seccion 06: etiquetas semanticas para tablas
objetivo: estructurar la tabla con las etiquetas especiales
1. el titulo de la tabla puede ser colocado dentro de (<thead></thead>) donde (t) es de tabla y (head) de encabezado.
2. existe una etiqueta especifica para las celdas que pertenecen a ese encabezado (<th></th>) y cambiamos (<td>Dia</td>) y (<td>Horario</td>) por (<th>Dia</th>) y 
(<th>Horario</th>).
3. tenemos la etiqueta (<tbody></tbody>) que debe contener el cuerpo de la tabla que son las celdas relacionadas a ese encabezado y tenemos la etiqueta (<tfoot>) como 
el pie de la pagina.

seccion 06: estilos en las tablas
objetivo: trabajar la parte visual los estilos de la tabla
1. primero colocaremos un espaciamiento superior e inferior y los laterales en la tabla, utilizamos (table {}) y le asignamos la propiedad (margin: 40px 40px;) 
que es (40px) superior e inferior y (40px) los laterales.
2. segundo modificamos el encabezado utilizando (thead {}) y le damos la propiedad (background: #555555;) le damos un color plomo, (color: white;) le damos un color
blanco a la letra y (font-weight: bold;) le damos un aspecto de negrita.
3. tercero dibujamos las lineas, creamos (td {}) y le añadimos la propiedad (order: 1px solid #000000;) donde (1px) es el grosor de la linea, (solid) es una linea
continua, (#000000) es el color negro de la linea.
4. cuarto le ponemos al encabezado las lineas modificando (td {}), le agregamos (td, th {}). 
5. quisto colocamos un espaciamiento interno en (td, th {}) y la propiedad es (padding: 8px 15px;) y le dice asignale (8px) superior e inferior y (15px) laterales.













 



 
























 



 







