#4.......retorna el tipo
"""En este desaf칤o encontrar치s una funci칩n llamada solution que recibe un par치metro llamado valor. Debes encontrar el tipo de dato del par치metro valor y retornarlo desde la funci칩n solution.
Recuerda que el par치metro valor ser치 distinto por cada distinta forma en que ejecutemos la funci칩n solution."""
#usando return dentro de la funcion
def found_type(value):
   return type(value)

print(found_type(1)) #<class 'int'>
print(found_type("Dieguillo")) #<class 'str'> 
print(found_type(True)) #<class 'bool'>

#usando print dentro de la funcion
def found_type1(value):
   print(type(value))

found_type1(1) #<class 'int'>
found_type1("Dieguillo") #<class 'str'>
found_type1(True) #<class 'bool'>

#usando condicionales dentro de la funcion
def found_type2(value):
    if type(value) == int:
        print("number")
    elif type(value) == str:
        print("string")
    elif type(value) == bool:
        print("boolean")

found_type2(1) #number
found_type2("Dieguillo") #string  
found_type2(True) #boolean 

#solucion platzi
def found_type(value):
   return type(value)

print(found_type(1)) #<class 'int'>
print(found_type("Dieguillo")) #<class 'str'>
print(found_type(True)) #<class 'bool'>

#6.......calcula la propina
"""En este desaf칤o tendr치s que calcular la propina que deben dejar los clientes de un restaurante en funci칩n de su consumo.
La funci칩n calculate_tip recibir치 dos par치metros, bill_amount que representa el costo total de lo que se haya consumido y tip_percentage que representa el porcentaje de propina a dejar. Ambos valores ser치n de tipo float y siempre ser치n positivos, incluyendo el 0. La funci칩n deber치 devolver el valor de la propina como un n칰mero.
Recuerda que para redondear a dos decimales tendr치s que hacer uso de round(numero, cantidad de decimales)"""
def calculate_tip(bill_amount):
    if bill_amount >= 0 and bill_amount <= 100.99:
        porcentaje = float(10/100)
        monto = float(bill_amount)
        propina = monto * porcentaje
        return round(propina, 2)
    elif bill_amount >= 101 and bill_amount <= 1500.99:
        porcentaje = float(20/100)
        monto = float(bill_amount)
        propina = monto * porcentaje
        return round(propina, 2)
    elif bill_amount >= 1501:
        porcentaje = float(25/100)
        monto = float(bill_amount)
        propina = monto * porcentaje
        return round(propina, 2)
    else:
        return "Lo siento los numeros deben ser mayores o iguales a cero"

print(calculate_tip(100)) #10.0
print(calculate_tip(1524.33)) #381.08
print(calculate_tip(-2)) #Lo siento los numeros deben ser mayores o iguales a cero

#solucion platzi
def calculate_tip(bill_amount, tipPercentage):
   return round( ((bill_amount * tipPercentage)/ 100),2 )

print(calculate_tip(100, 10)) #10
print(calculate_tip(1524.33, 25)) #381.08

#8.......averigua si un a침o es bisiesto
"""En este desaf칤o de Python, debes crear la l칩gica de la funci칩n is_leap_year, que determina si un a침o es bisiesto o no. Un a침o es bisiesto si cumple con las siguientes condiciones:
Es divisible por 4, pero no por 100.
Si es divisible por 100 debe serlo por 400 tambi칠n.
La funci칩n is_leap_year recibe un 칰nico par치metro: el a침o a evaluar. Debe devolver True si el a침o es bisiesto o False en caso contrario.
Toma en cuenta que la funci칩n debe ser capaz de manejar valores no enteros o negativos."""
def is_leap_year(year):
    if year < 0 or type(year) == float:
        return "false"
    elif (year%4 == 0 and year%100 != 0) or (year%100 == 0 and year%400 ==0):
        return "true"
    else:
        return "false"

print(is_leap_year(2000))
print(is_leap_year(-2024))
print(is_leap_year(1984.25))
print(is_leap_year(400))
print(is_leap_year(2012))
print(is_leap_year(2016))
print(is_leap_year(2020))
print(is_leap_year(1582))
print(is_leap_year(1584))
print(is_leap_year(2032))
print(is_leap_year(2035))

#solucion platzi
def is_leap_year(year):
    # tu c칩digo aqu칤 游녣
    if year > 0:
        if(year % 4 == 0) and (year % 100 != 0):
            return True
        elif (year % 100 == 0) and (year % 400 == 0):
            return True
        else:
            return False
    else:
        return False


result = is_leap_year(-2004)
print(result)

#10.......dibuja un triangulo usando bucles
"""En este desaf칤o, debes dibujar un tri치ngulo equilatero usando bucles.
Recibir치s dos par치metros: size y character, que definen el n칰mero de filas que tendr치 y el car치cter con el que se debe construir el tri치ngulo, respectivamente. Adem치s, el tri치ngulo debe estar alineado al centro, lo que significa que la misma cantidad de caracteres debe haber en ambos lados.
Recuerda que para hacer el salto de l칤nea debes usar "\n", no olvides removerla de la 칰ltima parte, debes retornar todo esto en una variable."""
def print_triangle(size, character):
    for i in range(size):
        i += 1
        print(size*" " + character*i + size*" ")
        size -= 1
    
print_triangle(10, "*")

#solucion platzi
def print_triangle(size, character):
    triangle = ''
    for i in range(size):
        triangle += " " * (size - i - 1)
        triangle += character  + character * (2 * i)
        if i != size - 1:
            triangle += "\n"
    return triangle

